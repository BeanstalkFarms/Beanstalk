// Generated by dts-bundle-generator v8.1.2

import { CanvasRenderingTarget2D } from 'fancy-canvas';
import { Coordinate, IChartApi, ISeriesApi, ISeriesPrimitive, ISeriesPrimitiveAxisView, ISeriesPrimitivePaneRenderer, ISeriesPrimitivePaneView, SeriesOptionsMap, SeriesType, Time } from 'lightweight-charts';

declare class VertLinePaneRenderer implements ISeriesPrimitivePaneRenderer {
	_x: Coordinate | null;
	_options: VertLineOptions;
	constructor(x: Coordinate | null, options: VertLineOptions);
	draw(target: CanvasRenderingTarget2D): void;
}
declare class VertLinePaneView implements ISeriesPrimitivePaneView {
	_source: VertLine;
	_x: Coordinate | null;
	_options: VertLineOptions;
	constructor(source: VertLine, options: VertLineOptions);
	update(): void;
	renderer(): VertLinePaneRenderer;
}
declare class VertLineTimeAxisView implements ISeriesPrimitiveAxisView {
	_source: VertLine;
	_x: Coordinate | null;
	_options: VertLineOptions;
	constructor(source: VertLine, options: VertLineOptions);
	update(): void;
	visible(): boolean;
	tickVisible(): boolean;
	coordinate(): 0 | Coordinate;
	text(): string;
	textColor(): string;
	backColor(): string;
}
export interface VertLineOptions {
	color: string;
	labelText: string;
	width: number;
	labelBackgroundColor: string;
	labelTextColor: string;
	showLabel: boolean;
}
export declare class VertLine implements ISeriesPrimitive<Time> {
	_chart: IChartApi;
	_series: ISeriesApi<keyof SeriesOptionsMap>;
	_time: Time;
	_paneViews: VertLinePaneView[];
	_timeAxisViews: VertLineTimeAxisView[];
	constructor(chart: IChartApi, series: ISeriesApi<SeriesType>, time: Time, options?: Partial<VertLineOptions>);
	updateAllViews(): void;
	timeAxisViews(): VertLineTimeAxisView[];
	paneViews(): VertLinePaneView[];
}

export {};
